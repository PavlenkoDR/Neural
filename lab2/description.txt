Для начала запустите базовую версию программы

Запишите точность работы сети после обучения на тестовых данных. Она приводится в последней строке вывода:

Точность работы на тестовых данных: 76.29%

Проанализируйте точность на проверочной выборке в процессе обучения. Она указывается после заголовка val_acc. Началось ли переобучение нейронной сети?
Экспериментируем с гиперпараметрами обучения

Мы попытаемся улучшить качество обучения сети путем изменения гиперпараметров: скорость обучения, количество эпох обучения, количество слоев в сети. Для этого проведем серию экспериментов, в каждом из которых будем менять один из гиперпараметров, и анализировать, как изменилось качество работы сети.

    Скорость обучения. Оценим влияние параметра скорости обучения в методе стохастического градиентного спуска на качество обучения нейронной сети. Скорость обучения задается в параметре lr при создании экземпляра оптимизатора, работающего по методу стохастического градиентного спуска (Stochastic Gradient Descent, SGD):

     sgd = SGD(lr=XXX, decay=1e-6, momentum=0.9, nesterov=True)

    Попробуйте использовать значения 0.02, 0.05 и 0.1. Оцените время обучения сети при разных значениях параметра.

    Выберите скорость обучения, при которой самая высокая точность работы сети на тестовых данных.

    Количество эпох обучения. Оценим влияние количества эпох обучения на качество обучения сети. Количество эпох задается в константе nb_epoch:

     nb_epoch = 25

    Попробуйте обучать сеть в течение 15, 20 и 30. эпох. Выберите количество эпох, при котором самая высокая точность работы сети на тестовых данных.

    Количество слоев в сети. Оценим влияние количества сверточных слоев в сети на качество обучения. Для этого удалим второй каскад из двух слоев свертки и слоя подвыборки:

     # Третий сверточный слой
     model.add(Conv2D(64, (3, 3), padding='same', activation='relu'))
     # Четвертый сверточный слой
     model.add(Conv2D(64, (3, 3), activation='relu'))
     # Второй слой подвыборки
     model.add(MaxPooling2D(pool_size=(2, 2)))
     # Слой регуляризации Dropout
     model.add(Dropout(0.25))

    Запустите программу и оцените точность работы сети на тестовых данных, а также время обучения сети.

Выбираем лучшие гиперпараметры

Создайте сеть с лучшими значениями всех гиперпараметров обучения, которые вы определили на предыдущем шаге. Увеличилась ли точность работы сети? Что можно сделать, чтобы еще больше увеличить точность?